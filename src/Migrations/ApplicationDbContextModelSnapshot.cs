// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NutriTrack.src.Infraestructure.Persistence;

#nullable disable

namespace NutriTrack.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NutriTrack.src.Domain.Entities.Food", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("NutriTrack.src.Domain.Entities.Meal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("NutriTrack.src.Domain.Entities.MealFood", b =>
                {
                    b.Property<Guid>("MealId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FoodId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("QuantityInGrams")
                        .HasColumnType("numeric");

                    b.HasKey("MealId", "FoodId");

                    b.HasIndex("FoodId");

                    b.ToTable("MealsFood");
                });

            modelBuilder.Entity("NutriTrack.src.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NutriTrack.src.Domain.Entities.Meal", b =>
                {
                    b.HasOne("NutriTrack.src.Domain.Entities.User", null)
                        .WithMany("Meals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NutriTrack.src.Domain.Entities.MealFood", b =>
                {
                    b.HasOne("NutriTrack.src.Domain.Entities.Food", "Food")
                        .WithMany("MealFoods")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NutriTrack.src.Domain.Entities.Meal", "Meal")
                        .WithMany("MealFoods")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("NutriTrack.src.Domain.ValueObjects.NutritionalInfo", "NutritionalInfo", b1 =>
                        {
                            b1.Property<Guid>("MealFoodMealId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("MealFoodFoodId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Calories")
                                .HasColumnType("numeric")
                                .HasColumnName("Calories");

                            b1.Property<decimal>("Carbs")
                                .HasColumnType("numeric")
                                .HasColumnName("Carbs");

                            b1.Property<decimal>("Fat")
                                .HasColumnType("numeric")
                                .HasColumnName("Fat");

                            b1.Property<decimal>("Protein")
                                .HasColumnType("numeric")
                                .HasColumnName("Protein");

                            b1.HasKey("MealFoodMealId", "MealFoodFoodId");

                            b1.ToTable("MealsFood");

                            b1.WithOwner()
                                .HasForeignKey("MealFoodMealId", "MealFoodFoodId");
                        });

                    b.Navigation("Food");

                    b.Navigation("Meal");

                    b.Navigation("NutritionalInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("NutriTrack.src.Domain.Entities.Food", b =>
                {
                    b.Navigation("MealFoods");
                });

            modelBuilder.Entity("NutriTrack.src.Domain.Entities.Meal", b =>
                {
                    b.Navigation("MealFoods");
                });

            modelBuilder.Entity("NutriTrack.src.Domain.Entities.User", b =>
                {
                    b.Navigation("Meals");
                });
#pragma warning restore 612, 618
        }
    }
}
